// <auto-generated />
using EFDesigner2022Tests;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFDesigner2022Tests.Migrations
{
    [DbContext(typeof(EFModelDatabase))]
    partial class EFModelDatabaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFDesigner2022Tests.EntityChild", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("NameChild")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EntityChild", "dbo");
                });

            modelBuilder.Entity("EFDesigner2022Tests.EntityParent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("NameParent")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EntityParent", "dbo");
                });

            modelBuilder.Entity("EFDesigner2022Tests.EntityReference", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("NameReference")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EntityReference", "dbo");
                });

            modelBuilder.Entity("EntityChildEntityParent", b =>
                {
                    b.Property<long>("EntityChild_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("EntityParent_Id")
                        .HasColumnType("bigint");

                    b.HasKey("EntityChild_Id", "EntityParent_Id");

                    b.HasIndex("EntityParent_Id");

                    b.ToTable("ParentToChilds", "dbo");
                });

            modelBuilder.Entity("EntityParentEntityReference", b =>
                {
                    b.Property<long>("EntityParent_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("EntityReference_Id")
                        .HasColumnType("bigint");

                    b.HasKey("EntityParent_Id", "EntityReference_Id");

                    b.HasIndex("EntityReference_Id");

                    b.ToTable("RefToParent", "dbo");
                });

            modelBuilder.Entity("EntityChildEntityParent", b =>
                {
                    b.HasOne("EFDesigner2022Tests.EntityChild", null)
                        .WithMany()
                        .HasForeignKey("EntityChild_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFDesigner2022Tests.EntityParent", null)
                        .WithMany()
                        .HasForeignKey("EntityParent_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EntityParentEntityReference", b =>
                {
                    b.HasOne("EFDesigner2022Tests.EntityParent", null)
                        .WithMany()
                        .HasForeignKey("EntityParent_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFDesigner2022Tests.EntityReference", null)
                        .WithMany()
                        .HasForeignKey("EntityReference_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
